{"version":3,"sources":["webpack:///./src/components/board.vue?a3c6","webpack:///./src/components/comment.vue?37fc","webpack:///./src/components/board.vue?9302","webpack:///./src/components/comment.vue?a48e","webpack:///./src/apis/comment.js","webpack:///src/components/comment.vue","webpack:///./src/components/comment.vue?98f0","webpack:///./src/components/comment.vue","webpack:///src/components/board.vue","webpack:///./src/components/board.vue?0a6e","webpack:///./src/components/board.vue","webpack:///./node_modules/core-js/modules/es.array.splice.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","board_modify","handle","_v","attrs","model","value","callback","$$v","$set","expression","_l","file","i","key","on","$event","deleteExistFileList","_s","originalFileName","handleFileUpload","ref","previewImage","new_attachment","index","deleteFileList","name","_e","cancelModify","updateBoard","$router","push","board","title","content","attachment","_id","fileDownload","serverFileName","current_user","email","uploadedBy","deleteBoard","comments","fecthBoard","staticRenderFns","comment_to_board_string","writeCommentToBoard","slot","comment","comment_index","image","modify","comment_modify_string","length","updateComment","handleUpdateComment","diffTime","createdAt","staticStyle","deleteComment","handleReply","comment_to_comment_string","writeCommentToComment","visible","handleNestedCommentVisible","nested_comment","nested_comment_index","nested_comment_modify_string","updateNestedComment","handleUpdateNestedComment","commentToBoard","data","request","post","commentToComment","patch","delete","props","Array","nested_comment_visible","computed","methods","findComment","splice","nested_index","reply","msec","dd","hh","mm","ss","component","components","exist_attachment","remove_attachment_list","replay_visible","uploadFile","$refs","click","filesMaxCount","filesCount","$message","type","message","showClose","mounted","$","toAbsoluteIndex","toIntegerOrInfinity","lengthOfArrayLike","toObject","arraySpeciesCreate","createProperty","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","max","Math","min","MAX_SAFE_INTEGER","MAXIMUM_ALLOWED_LENGTH_EXCEEDED","target","proto","forced","start","deleteCount","insertCount","actualDeleteCount","A","k","from","to","O","len","actualStart","argumentsLength","arguments","TypeError"],"mappings":"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","file":"js/chunk-e703d3f2.f0df9c5a.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./board.vue?vue&type=style&index=0&id=365f8225&lang=scss&scoped=true&\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./comment.vue?vue&type=style&index=0&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"boradWrap\"},[(!_vm.board_modify.handle)?[_c('div',{staticClass:\"listWrap\"},[_c('el-button',{attrs:{\"icon\":\"el-icon-s-fold\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.$router.push({ name: 'boardList' })}}},[_vm._v(\" 목록 \")])],1),_c('div',{staticClass:\"titleWrap\"},[_c('h2',[_vm._v(_vm._s(_vm.board.title))])]),_c('div',{staticClass:\"contentWrap\"},[_c('p',[_vm._v(_vm._s(_vm.board.content))])]),(!!_vm.board.attachment)?_c('div',{staticClass:\"attachmentWrap\"},_vm._l((_vm.board.attachment),function(file){return _c('el-button',{key:file._id,attrs:{\"type\":\"text\",\"size\":\"mini\",\"icon\":\"el-icon-folder\"},on:{\"click\":function($event){return _vm.fileDownload(file.serverFileName)}}},[_vm._v(_vm._s(file.originalFileName))])}),1):_vm._e(),(_vm.current_user.email === _vm.board.uploadedBy.email)?_c('div',{staticClass:\"btnWrap\"},[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){_vm.board_modify.handle = true}}},[_vm._v(\" 수정 \")]),_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.deleteBoard()}}},[_vm._v(\" 삭제 \")])],1):_vm._e(),_c('div',{staticClass:\"line\"}),_c('Comment',{attrs:{\"comments\":_vm.comments},on:{\"callFecthBoard\":_vm.fecthBoard}})]:[_c('h1',[_vm._v(\"수정하기\")]),_c('div',{staticClass:\"inputWrap\"},[_c('p',[_vm._v(\"제목\")]),_c('el-input',{attrs:{\"placeholder\":\"title\",\"clearable\":\"\"},model:{value:(_vm.board_modify.title),callback:function ($$v) {_vm.$set(_vm.board_modify, \"title\", $$v)},expression:\"board_modify.title\"}})],1),_c('div',{staticClass:\"inputWrap\"},[_c('p',[_vm._v(\"내용\")]),_c('el-input',{attrs:{\"placeholder\":\"content\",\"clearable\":\"\"},model:{value:(_vm.board_modify.content),callback:function ($$v) {_vm.$set(_vm.board_modify, \"content\", $$v)},expression:\"board_modify.content\"}})],1),_c('div',{staticClass:\"inputWrap\"},[_c('p',[_vm._v(\"기존 첨부파일 수정\")]),_c('ul',{staticClass:\"fileListWrap\"},_vm._l((this.board_modify.exist_attachment),function(file,i){return _c('li',{key:i,staticClass:\"fileList\"},[_c('span',{on:{\"click\":function($event){return _vm.deleteExistFileList(i)}}},[_c('i',{staticClass:\"el-icon-circle-close\"})]),_vm._v(_vm._s(file.originalFileName))])}),0)]),_c('div',{staticClass:\"inputWrap\"},[_c('p',[_vm._v(\"첨부 파일 추가\")]),_c('el-button',{attrs:{\"native-type\":\"button\",\"round\":\"\",\"icon\":\"el-icon-document-add\",\"size\":\"mini\"},on:{\"click\":_vm.handleFileUpload}}),_c('input',{ref:\"file\",attrs:{\"type\":\"file\",\"id\":\"userImage\",\"multiple\":\"\"},on:{\"change\":_vm.previewImage}}),_c('transition',{attrs:{\"name\":\"slide-fade\"}},[(_vm.board_modify.new_attachment.length)?_c('ul',{staticClass:\"fileListWrap\"},_vm._l((this.board_modify.new_attachment),function(file,index){return _c('li',{key:index,staticClass:\"fileList\"},[_c('span',{on:{\"click\":function($event){return _vm.deleteFileList(index)}}},[_c('i',{staticClass:\"el-icon-circle-close\"})]),_vm._v(_vm._s(file.name)+\" \")])}),0):_vm._e()])],1),_c('div',{staticClass:\"btnWrap\"},[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.cancelModify()}}},[_vm._v(\"취소\")]),_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.updateBoard()}}},[_vm._v(\"저장\")])],1)]],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"commentsWrap\"},[_c('div',{staticClass:\"commentWrite\"},[_c('el-input',{attrs:{\"size\":\"mini\",\"maxlength\":\"55\",\"placeholder\":\"댓글을 입력해주세요.\"},model:{value:(_vm.comment_to_board_string),callback:function ($$v) {_vm.comment_to_board_string=$$v},expression:\"comment_to_board_string\"}},[_c('el-button',{attrs:{\"slot\":\"append\",\"size\":\"mini\",\"icon\":\"el-icon-chat-line-round\"},on:{\"click\":_vm.writeCommentToBoard},slot:\"append\"})],1)],1),_c('div',{staticClass:\"commentList\"},_vm._l((_vm.comments),function(comment,comment_index){return _c('div',{key:comment_index,staticClass:\"row\"},[_c('div',{staticClass:\"col\"},[_c('div',{staticClass:\"imgWrap\"},[(!comment.uploadedBy.image)?_c('i',{staticClass:\"el-icon-user\"}):_c('img',{attrs:{\"src\":comment.uploadedBy.image,\"alt\":\"프로필사진\"}})])]),_c('div',{staticClass:\"col\"},[_c('div',{staticClass:\"box\"},[_c('span',{staticClass:\"author\"},[_vm._v(_vm._s(comment.uploadedBy.name))])]),_c('div',{staticClass:\"box\"},[(!comment.modify)?[_c('span',{staticClass:\"content\"},[_vm._v(_vm._s(comment.content))]),_c('span',{staticClass:\"time\"},[_vm._v(_vm._s(_vm.diffTime(comment.createdAt)))]),_c('span',{staticClass:\"more\"},[_c('el-popover',{attrs:{\"placement\":\"bottom\",\"trigger\":\"click\",\"visible-arrow\":\"true\"}},[(comment.uploadedBy.email === _vm.current_user.email)?_c('div',{staticStyle:{\"text-align\":\"right\",\"margin\":\"0\"}},[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.handleUpdateComment(comment_index, comment.content)}}},[_vm._v(\"수정\")]),_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.deleteComment(comment._id)}}},[_vm._v(\"삭제\")])],1):_c('div',{staticStyle:{\"text-align\":\"right\",\"margin\":\"0\"}},[_c('el-button',{attrs:{\"size\":\"mini\"}},[_vm._v(\"신고\")])],1),_c('el-button',{attrs:{\"slot\":\"reference\",\"size\":\"mini\",\"type\":\"text\",\"icon\":\"el-icon-more\"},slot:\"reference\"})],1)],1)]:[_c('span',{staticClass:\"content\"},[_c('el-input',{attrs:{\"size\":\"mini\",\"maxlength\":\"55\"},model:{value:(_vm.comment_modify_string),callback:function ($$v) {_vm.comment_modify_string=$$v},expression:\"comment_modify_string\"}})],1),_c('span',[_c('el-button',{attrs:{\"size\":\"mini\",\"disabled\":!_vm.comment_modify_string.length ? true : false},on:{\"click\":function($event){return _vm.updateComment(comment._id)}}},[_vm._v(\"수정\")])],1),_c('span',[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.handleUpdateComment(comment_index)}}},[_vm._v(\"취소\")])],1)]],2),_c('div',{staticClass:\"box\"},[_c('el-button',{staticClass:\"like\",attrs:{\"size\":\"mini\",\"type\":\"text\"}},[_vm._v(\"좋아요\")]),_c('el-button',{staticClass:\"unLike\",attrs:{\"size\":\"mini\",\"type\":\"text\"}},[_vm._v(\"싫어요\")]),_c('el-button',{staticClass:\"reply\",attrs:{\"size\":\"mini\",\"type\":\"text\"},on:{\"click\":function($event){return _vm.handleReply(comment_index)}}},[_vm._v(\"답글\")])],1),(comment.reply)?_c('div',{staticClass:\"box\"},[_c('el-input',{attrs:{\"size\":\"mini\",\"maxlength\":\"55\",\"placeholder\":\"댓글을 입력해주세요.\"},model:{value:(_vm.comment_to_comment_string),callback:function ($$v) {_vm.comment_to_comment_string=$$v},expression:\"comment_to_comment_string\"}},[_c('el-button',{attrs:{\"slot\":\"append\",\"size\":\"mini\",\"icon\":\"el-icon-chat-line-round\"},on:{\"click\":function($event){return _vm.writeCommentToComment(comment._id)}},slot:\"append\"})],1)],1):_vm._e(),(comment.comments.length)?_c('div',{staticClass:\"box\"},[_c('el-button',{staticClass:\"moreReply\",attrs:{\"size\":\"mini\",\"type\":\"text\",\"icon\":!comment.visible ? \"el-icon-caret-bottom\" : 'el-icon-caret-top'},on:{\"click\":function($event){return _vm.handleNestedCommentVisible(comment_index)}}},[_vm._v(\"댓글 보기\")])],1):_vm._e(),_c('div',{staticClass:\"box\"},[_c('transition',{attrs:{\"name\":\"slide-fade\"}},[(comment.visible)?[_c('div',{staticClass:\"commentList\"},_vm._l((comment.comments),function(nested_comment,nested_comment_index){return _c('div',{key:nested_comment_index,staticClass:\"row\"},[_c('div',{staticClass:\"col\"},[_c('div',{staticClass:\"imgWrap\"},[(!nested_comment.uploadedBy.image)?_c('i',{staticClass:\"el-icon-user\"}):_c('img',{attrs:{\"src\":nested_comment.uploadedBy.image,\"alt\":\"프로필사진\"}})])]),_c('div',{staticClass:\"col\"},[_c('div',{staticClass:\"box\"},[_c('span',{staticClass:\"author\"},[_vm._v(_vm._s(nested_comment.uploadedBy.name))])]),_c('div',{staticClass:\"box\"},[(!nested_comment.modify)?[_c('span',{staticClass:\"content\"},[_vm._v(_vm._s(nested_comment.content))]),_c('span',{staticClass:\"time\"},[_vm._v(_vm._s(_vm.diffTime(nested_comment.createdAt)))]),_c('span',{staticClass:\"more\"},[_c('el-popover',{attrs:{\"placement\":\"bottom\",\"trigger\":\"click\",\"visible-arrow\":\"true\"}},[(\n                                nested_comment.uploadedBy.email ===\n                                _vm.current_user.email\n                              )?_c('div',{staticStyle:{\"text-align\":\"right\",\"margin\":\"0\"}},[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.handleUpdateNestedComment(\n                                    comment_index,\n                                    nested_comment_index,\n                                    nested_comment.content\n                                  )}}},[_vm._v(\"수정\")]),_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.deleteComment(nested_comment._id)}}},[_vm._v(\"삭제\")])],1):_c('div',{staticStyle:{\"text-align\":\"right\",\"margin\":\"0\"}},[_c('el-button',{attrs:{\"size\":\"mini\"}},[_vm._v(\"신고\")])],1),_c('el-button',{attrs:{\"slot\":\"reference\",\"size\":\"mini\",\"type\":\"text\",\"icon\":\"el-icon-more\"},slot:\"reference\"})],1)],1)]:[_c('span',{staticClass:\"content\"},[_c('el-input',{attrs:{\"size\":\"mini\",\"maxlength\":\"55\"},model:{value:(_vm.nested_comment_modify_string),callback:function ($$v) {_vm.nested_comment_modify_string=$$v},expression:\"nested_comment_modify_string\"}})],1),_c('span',[_c('el-button',{attrs:{\"size\":\"mini\",\"disabled\":!_vm.nested_comment_modify_string.length\n                                ? true\n                                : false},on:{\"click\":function($event){return _vm.updateNestedComment(nested_comment._id)}}},[_vm._v(\"수정\")])],1),_c('span',[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.handleUpdateNestedComment(\n                                comment_index,\n                                nested_comment_index\n                              )}}},[_vm._v(\"취소\")])],1)]],2),_c('div',{staticClass:\"box\"},[_c('el-button',{staticClass:\"like\",attrs:{\"size\":\"mini\",\"type\":\"text\"}},[_vm._v(\"좋아요\")]),_c('el-button',{staticClass:\"unLike\",attrs:{\"size\":\"mini\",\"type\":\"text\"}},[_vm._v(\"싫어요\")])],1)])])}),0)]:_vm._e()],2)],1)])])}),0)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import request from '@/utils/request'\n\nexport function getComments() {\n  return request.get('/comment/comments')\n}\n\nexport function commentToBoard(data) {\n  return request.post('/comment/writeToBoard', data)\n}\n\nexport function commentToComment(data) {\n  return request.post('/comment/writeToComment', data)\n}\n\nexport function updateComment(data) {\n  return request.patch('/comment/update', data)\n}\n\nexport function deleteComment(data) {\n  return request.delete('/comment/delete', { data })\n}\n","<template>\n  <div class=\"commentsWrap\">\n    <!-- 댓글 입력 박스 -->\n    <div class=\"commentWrite\">\n      <el-input\n        size=\"mini\"\n        maxlength=\"55\"\n        placeholder=\"댓글을 입력해주세요.\"\n        v-model=\"comment_to_board_string\"\n      >\n        <el-button\n          size=\"mini\"\n          slot=\"append\"\n          icon=\"el-icon-chat-line-round\"\n          @click=\"writeCommentToBoard\"\n        ></el-button>\n      </el-input>\n    </div>\n    <!-- 댓글 리스트 -->\n    <div class=\"commentList\">\n      <div\n        class=\"row\"\n        v-for=\"(comment, comment_index) in comments\"\n        :key=\"comment_index\"\n      >\n        <!-- 댓글 작성자 아이디 -->\n        <div class=\"col\">\n          <div class=\"imgWrap\">\n            <i v-if=\"!comment.uploadedBy.image\" class=\"el-icon-user\"></i>\n            <img v-else :src=\"comment.uploadedBy.image\" alt=\"프로필사진\" />\n          </div>\n        </div>\n        <!-- 댓글 내용 -->\n        <div class=\"col\">\n          <div class=\"box\">\n            <span class=\"author\">{{ comment.uploadedBy.name }}</span>\n          </div>\n          <div class=\"box\">\n            <!-- 댓글 -->\n            <template v-if=\"!comment.modify\">\n              <span class=\"content\">{{ comment.content }}</span>\n              <span class=\"time\">{{ diffTime(comment.createdAt) }}</span>\n              <span class=\"more\">\n                <el-popover\n                  placement=\"bottom\"\n                  trigger=\"click\"\n                  visible-arrow=\"true\"\n                >\n                  <div\n                    v-if=\"comment.uploadedBy.email === current_user.email\"\n                    style=\"text-align: right; margin: 0\"\n                  >\n                    <el-button\n                      size=\"mini\"\n                      @click=\"\n                        handleUpdateComment(comment_index, comment.content)\n                      \"\n                      >수정</el-button\n                    >\n                    <el-button @click=\"deleteComment(comment._id)\" size=\"mini\"\n                      >삭제</el-button\n                    >\n                  </div>\n                  <div v-else style=\"text-align: right; margin: 0\">\n                    <el-button size=\"mini\">신고</el-button>\n                  </div>\n                  <el-button\n                    size=\"mini\"\n                    slot=\"reference\"\n                    type=\"text\"\n                    icon=\"el-icon-more\"\n                  ></el-button>\n                </el-popover>\n              </span>\n            </template>\n            <!-- 댓글 수정  -->\n            <template v-else>\n              <span class=\"content\"\n                ><el-input\n                  size=\"mini\"\n                  maxlength=\"55\"\n                  v-model=\"comment_modify_string\"\n                ></el-input\n              ></span>\n              <span>\n                <el-button\n                  size=\"mini\"\n                  :disabled=\"!comment_modify_string.length ? true : false\"\n                  @click=\"updateComment(comment._id)\"\n                  >수정</el-button\n                ></span\n              >\n              <span>\n                <el-button\n                  size=\"mini\"\n                  @click=\"handleUpdateComment(comment_index)\"\n                  >취소</el-button\n                ></span\n              >\n            </template>\n          </div>\n          <!-- 좋아요 및 대댓글  -->\n          <div class=\"box\">\n            <el-button size=\"mini\" type=\"text\" class=\"like\">좋아요</el-button>\n            <el-button size=\"mini\" type=\"text\" class=\"unLike\">싫어요</el-button>\n            <el-button\n              size=\"mini\"\n              class=\"reply\"\n              type=\"text\"\n              @click=\"handleReply(comment_index)\"\n              >답글</el-button\n            >\n          </div>\n          <!-- 대댓글 입력 창 -->\n          <div class=\"box\" v-if=\"comment.reply\">\n            <el-input\n              size=\"mini\"\n              maxlength=\"55\"\n              placeholder=\"댓글을 입력해주세요.\"\n              v-model=\"comment_to_comment_string\"\n            >\n              <el-button\n                size=\"mini\"\n                slot=\"append\"\n                icon=\"el-icon-chat-line-round\"\n                @click=\"writeCommentToComment(comment._id)\"\n              ></el-button>\n            </el-input>\n            <!-- <el-button @click=\"handleReply(comment_index)\"> 취소 </el-button> -->\n          </div>\n          <div class=\"box\" v-if=\"comment.comments.length\">\n            <el-button\n              size=\"mini\"\n              type=\"text\"\n              class=\"moreReply\"\n              :icon=\"\n                !comment.visible ? `el-icon-caret-bottom` : 'el-icon-caret-top'\n              \"\n              @click=\"handleNestedCommentVisible(comment_index)\"\n              >댓글 보기</el-button\n            >\n          </div>\n          <div class=\"box\">\n            <transition name=\"slide-fade\">\n              <template v-if=\"comment.visible\">\n                <div class=\"commentList\">\n                  <div\n                    class=\"row\"\n                    v-for=\"(\n                      nested_comment, nested_comment_index\n                    ) in comment.comments\"\n                    :key=\"nested_comment_index\"\n                  >\n                    <!-- 대댓글 작성자 아이디 -->\n                    <div class=\"col\">\n                      <div class=\"imgWrap\">\n                        <i\n                          v-if=\"!nested_comment.uploadedBy.image\"\n                          class=\"el-icon-user\"\n                        ></i>\n                        <img\n                          v-else\n                          :src=\"nested_comment.uploadedBy.image\"\n                          alt=\"프로필사진\"\n                        />\n                      </div>\n                    </div>\n                    <!-- 대댓글 내용 -->\n                    <div class=\"col\">\n                      <div class=\"box\">\n                        <span class=\"author\">{{\n                          nested_comment.uploadedBy.name\n                        }}</span>\n                      </div>\n                      <div class=\"box\">\n                        <!-- 대댓글 -->\n                        <template v-if=\"!nested_comment.modify\">\n                          <span class=\"content\">{{\n                            nested_comment.content\n                          }}</span>\n                          <span class=\"time\">{{\n                            diffTime(nested_comment.createdAt)\n                          }}</span>\n                          <span class=\"more\">\n                            <el-popover\n                              placement=\"bottom\"\n                              trigger=\"click\"\n                              visible-arrow=\"true\"\n                            >\n                              <div\n                                v-if=\"\n                                  nested_comment.uploadedBy.email ===\n                                  current_user.email\n                                \"\n                                style=\"text-align: right; margin: 0\"\n                              >\n                                <el-button\n                                  size=\"mini\"\n                                  @click=\"\n                                    handleUpdateNestedComment(\n                                      comment_index,\n                                      nested_comment_index,\n                                      nested_comment.content\n                                    )\n                                  \"\n                                  >수정</el-button\n                                >\n                                <el-button\n                                  size=\"mini\"\n                                  @click=\"deleteComment(nested_comment._id)\"\n                                  >삭제</el-button\n                                >\n                              </div>\n                              <div v-else style=\"text-align: right; margin: 0\">\n                                <el-button size=\"mini\">신고</el-button>\n                              </div>\n                              <el-button\n                                size=\"mini\"\n                                slot=\"reference\"\n                                type=\"text\"\n                                icon=\"el-icon-more\"\n                              ></el-button>\n                            </el-popover>\n                          </span>\n                        </template>\n                        <!-- 대댓글 수정  -->\n                        <template v-else>\n                          <span class=\"content\"\n                            ><el-input\n                              size=\"mini\"\n                              maxlength=\"55\"\n                              v-model=\"nested_comment_modify_string\"\n                            ></el-input\n                          ></span>\n                          <span>\n                            <el-button\n                              size=\"mini\"\n                              :disabled=\"\n                                !nested_comment_modify_string.length\n                                  ? true\n                                  : false\n                              \"\n                              @click=\"updateNestedComment(nested_comment._id)\"\n                              >수정</el-button\n                            ></span\n                          >\n                          <span>\n                            <el-button\n                              size=\"mini\"\n                              @click=\"\n                                handleUpdateNestedComment(\n                                  comment_index,\n                                  nested_comment_index\n                                )\n                              \"\n                              >취소</el-button\n                            ></span\n                          >\n                        </template>\n                      </div>\n                      <!-- 대댓글 좋아요  -->\n                      <div class=\"box\">\n                        <el-button size=\"mini\" type=\"text\" class=\"like\"\n                          >좋아요</el-button\n                        >\n                        <el-button size=\"mini\" type=\"text\" class=\"unLike\"\n                          >싫어요</el-button\n                        >\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </template>\n            </transition>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  commentToComment,\n  commentToBoard,\n  updateComment,\n  deleteComment,\n} from '@/apis/comment'\nimport { mapState } from 'vuex'\nexport default {\n  props: {\n    comments: Array,\n  },\n  data() {\n    return {\n      comment_to_board_string: '',\n      comment_to_comment_string: '',\n      comment_modify_string: '',\n      nested_comment_modify_string: '',\n      nested_comment_visible: false,\n    }\n  },\n  computed: {\n    ...mapState('auth', ['current_user']),\n  },\n  methods: {\n    async writeCommentToBoard() {\n      await commentToBoard({\n        content: this.comment_to_board_string,\n        board: this.$route.params.id,\n      })\n      this.comment_to_board_string = ''\n      this.$emit('callFecthBoard')\n    },\n    async writeCommentToComment(_id) {\n      await commentToComment({\n        content: this.comment_to_comment_string,\n        comments: _id,\n      })\n      this.comment_to_comment_string = ''\n      this.$emit('callFecthBoard')\n    },\n    async deleteComment(_id) {\n      this.visible = false\n      await deleteComment({ _id })\n      this.$emit('callFecthBoard')\n    },\n    async updateComment(_id) {\n      await updateComment({ _id, content: this.comment_modify_string })\n      this.$emit('callFecthBoard')\n    },\n    async updateNestedComment(_id) {\n      await updateComment({ _id, content: this.nested_comment_modify_string })\n      this.$emit('callFecthBoard')\n    },\n    handleUpdateComment(index, content) {\n      !content\n        ? (this.comment_modify_string = '')\n        : (this.comment_modify_string = content)\n\n      const findComment = this.comments[index]\n      findComment.modify = !findComment.modify\n      this.comments.splice(index, 1, findComment)\n    },\n    handleUpdateNestedComment(index, nested_index, content) {\n      !content\n        ? (this.nested_comment_modify_string = '')\n        : (this.nested_comment_modify_string = content)\n\n      const findComment = this.comments[index]\n      findComment.comments[nested_index].modify =\n        !findComment.comments[nested_index].modify\n      this.comments[index].comments.splice(\n        nested_index,\n        1,\n        findComment.comments[nested_index]\n      )\n    },\n    handleReply(index) {\n      const findComment = this.comments[index]\n      findComment.reply = !findComment.reply\n      this.comments.splice(index, 1, findComment)\n    },\n    diffTime(date) {\n      const now = new Date().getTime()\n      const time = new Date(date).getTime()\n\n      const diff = now - time\n\n      let msec = diff\n      let dd = Math.floor(msec / 1000 / 24 / 60 / 60)\n      msec -= dd * 1000 * 24 * 60 * 60\n      let hh = Math.floor(msec / 1000 / 60 / 60)\n      msec -= hh * 1000 * 60 * 60\n      let mm = Math.floor(msec / 1000 / 60)\n      msec -= mm * 1000 * 60\n      let ss = Math.floor(msec / 1000)\n      msec -= ss * 1000\n      if (dd) {\n        return `${dd}일 전`\n      }\n      if (hh) {\n        return `${hh}시간 전`\n      }\n      if (mm) {\n        return `${mm}분 전`\n      }\n      if (ss) {\n        return `${ss}초 전`\n      }\n      return `0초 전`\n    },\n    handleNestedCommentVisible(index) {\n      const findComment = this.comments[index]\n      findComment.visible = !findComment.visible\n      this.comments.splice(index, 1, findComment)\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\">\n.commentList {\n  margin-top: 15px;\n  .commentList {\n    width: 90%;\n  }\n  .row {\n    margin-bottom: 30px;\n    display: flex;\n    flex-wrap: wrap;\n    .col {\n      &:nth-child(1) {\n        align-items: flex-start;\n        margin-right: 10px;\n      }\n      &:nth-child(2) {\n        flex-direction: column;\n        align-items: flex-start;\n        flex: 1;\n      }\n      display: flex;\n      align-items: center;\n      .box {\n        display: flex;\n        align-items: center;\n        flex-wrap: wrap;\n        width: 100%;\n        line-height: 30px;\n        font-size: 12px;\n      }\n    }\n    .author {\n      min-width: 80px;\n      text-align: left;\n    }\n    .content {\n      min-width: 150px;\n      text-align: left;\n      flex: 1;\n      word-break: keep-all;\n      word-wrap: break-word;\n    }\n    .time {\n      min-width: 50px;\n      font-size: 13px;\n    }\n    .more {\n      min-width: 50px;\n    }\n    .like,\n    .unLike,\n    .reply {\n      min-width: 70px;\n      font-size: 13px;\n      cursor: pointer;\n    }\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./comment.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./comment.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./comment.vue?vue&type=template&id=8f71e73a&\"\nimport script from \"./comment.vue?vue&type=script&lang=js&\"\nexport * from \"./comment.vue?vue&type=script&lang=js&\"\nimport style0 from \"./comment.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"boradWrap\">\n    <template v-if=\"!board_modify.handle\">\n      <div class=\"listWrap\">\n        <el-button\n          @click=\"$router.push({ name: 'boardList' })\"\n          icon=\"el-icon-s-fold\"\n          size=\"mini\"\n        >\n          목록\n        </el-button>\n      </div>\n      <div class=\"titleWrap\"\n        ><h2>{{ board.title }}</h2></div\n      >\n      <div class=\"contentWrap\"\n        ><p>{{ board.content }}</p></div\n      >\n      <div v-if=\"!!board.attachment\" class=\"attachmentWrap\"\n        ><el-button\n          v-for=\"file in board.attachment\"\n          :key=\"file._id\"\n          type=\"text\"\n          size=\"mini\"\n          icon=\"el-icon-folder\"\n          @click=\"fileDownload(file.serverFileName)\"\n          >{{ file.originalFileName }}</el-button\n        ></div\n      >\n      <div v-if=\"current_user.email === board.uploadedBy.email\" class=\"btnWrap\">\n        <el-button size=\"mini\" @click=\"board_modify.handle = true\">\n          수정\n        </el-button>\n        <el-button size=\"mini\" @click=\"deleteBoard()\"> 삭제 </el-button>\n      </div>\n      <div class=\"line\"></div>\n      <Comment :comments=\"comments\" @callFecthBoard=\"fecthBoard\"></Comment>\n    </template>\n    <!-- 보드 수정 -->\n    <template v-else>\n      <h1>수정하기</h1>\n      <div class=\"inputWrap\">\n        <p>제목</p>\n        <el-input placeholder=\"title\" v-model=\"board_modify.title\" clearable>\n        </el-input>\n      </div>\n      <div class=\"inputWrap\">\n        <p>내용</p>\n        <el-input\n          placeholder=\"content\"\n          v-model=\"board_modify.content\"\n          clearable\n        >\n        </el-input>\n      </div>\n      <div class=\"inputWrap\">\n        <p>기존 첨부파일 수정</p>\n        <ul class=\"fileListWrap\">\n          <li\n            class=\"fileList\"\n            v-for=\"(file, i) in this.board_modify.exist_attachment\"\n            :key=\"i\"\n            ><span @click=\"deleteExistFileList(i)\"\n              ><i class=\"el-icon-circle-close\"></i></span\n            >{{ file.originalFileName }}</li\n          >\n        </ul>\n      </div>\n      <div class=\"inputWrap\">\n        <p>첨부 파일 추가</p>\n        <el-button\n          native-type=\"button\"\n          round\n          icon=\"el-icon-document-add\"\n          size=\"mini\"\n          @click=\"handleFileUpload\"\n        ></el-button>\n        <input\n          type=\"file\"\n          id=\"userImage\"\n          ref=\"file\"\n          @change=\"previewImage\"\n          multiple\n        />\n        <transition name=\"slide-fade\">\n          <ul v-if=\"board_modify.new_attachment.length\" class=\"fileListWrap\">\n            <li\n              class=\"fileList\"\n              v-for=\"(file, index) in this.board_modify.new_attachment\"\n              :key=\"index\"\n            >\n              <span @click=\"deleteFileList(index)\"\n                ><i class=\"el-icon-circle-close\"></i></span\n              >{{ file.name }}\n            </li>\n          </ul>\n        </transition>\n      </div>\n      <div class=\"btnWrap\">\n        <el-button size=\"mini\" @click=\"cancelModify()\">취소</el-button>\n        <el-button size=\"mini\" @click=\"updateBoard()\">저장</el-button>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { getBoard, deleteBoard, updateBoard } from '@/apis/board'\nimport { mapState } from 'vuex'\nimport map from 'lodash/map'\nimport Comment from '@/components/comment'\nexport default {\n  components: { Comment },\n  data() {\n    return {\n      board: {\n        attachment: [],\n        uploadedBy: {\n          email: '',\n        },\n      },\n      comments: [],\n      board_modify: {\n        handle: false,\n        title: '',\n        content: '',\n        new_attachment: [],\n        exist_attachment: [],\n      },\n      remove_attachment_list: [],\n      visible: false,\n      replay_visible: false,\n    }\n  },\n  computed: {\n    ...mapState('auth', ['current_user']),\n  },\n  methods: {\n    async fecthBoard() {\n      this.$store.dispatch('common/getLoading', true)\n      const { data } = await getBoard(this.$route.params.id)\n      this.board = data\n      this.board_modify = {\n        title: data.title,\n        content: data.content,\n        handle: false,\n        new_attachment: [],\n        exist_attachment: data.attachment,\n      }\n      // 객체에 modify, reply 값 추가\n      this.comments = map(this.board.comments, (el) => {\n        return {\n          ...el,\n          modify: false,\n          reply: false,\n          visible: false,\n          comments: map(el.comments, (reply) => {\n            return { ...reply, modify: false }\n          }),\n        }\n      })\n\n      this.$store.dispatch('common/getLoading', false)\n    },\n    async deleteBoard() {\n      await deleteBoard({\n        id: this.$route.params.id,\n        email: this.board.uploadedBy.email,\n      })\n        .then(() => {\n          this.$message({\n            showClose: true,\n            message: '글이 삭제되었습니다.',\n            tpye: 'success',\n          })\n          this.$router.push({ name: 'boardList' })\n        })\n        .catch((err) => {\n          this.$message({\n            showClose: true,\n            message: err.response.data.errors.message,\n            tpye: 'error',\n          })\n        })\n    },\n    async updateBoard() {\n      const totalAttachmentCount =\n        this.board_modify.new_attachment.length +\n        this.board_modify.exist_attachment.length\n      console.log(totalAttachmentCount)\n      if (totalAttachmentCount > 3) {\n        return this.$message({\n          type: 'info',\n          message: '첨부 파일은 최대 3개 까지만 가능합니다.',\n        })\n      }\n      this.$store.dispatch('common/getLoading', true)\n\n      const formData = new FormData()\n      formData.append('_id', this.board._id)\n      formData.append('email', this.board.uploadedBy.email)\n      formData.append('title', this.board_modify.title)\n      formData.append('content', this.board_modify.content)\n      // 첨부파일 추가할 때\n      if (this.board_modify.new_attachment.length) {\n        this.board_modify.new_attachment.forEach((file) => {\n          formData.append('attachment', file)\n        })\n      }\n      // 기존 첨부파일 제거 할 때\n      if (this.remove_attachment_list.length) {\n        this.remove_attachment_list.forEach((file) =>\n          formData.append('removeFileIds', file._id)\n        )\n      }\n      try {\n        await updateBoard(formData)\n        this.board_modify.handle = false\n        await this.fecthBoard()\n      } catch (err) {\n        this.$message({\n          type: 'error',\n          message: '실패했습니다.',\n        })\n      } finally {\n        this.$store.dispatch('common/getLoading', false)\n      }\n    },\n    async fileDownload(key) {\n      window.open(`http://localhost:3000/api/file/${key}`)\n    },\n    uploadFile(file) {\n      this.file = file\n    },\n    cancelModify() {\n      this.board_modify = {\n        title: this.board.title,\n        content: this.board.content,\n        handle: false,\n        new_attachment: [],\n        exist_attachment: this.board.attachment,\n      }\n      this.remove_attachment_list = []\n    },\n    handleFileUpload() {\n      this.$refs.file.click()\n    },\n    previewImage(e) {\n      const filesMaxCount = 3\n      const filesCount =\n        e.target.files.length + this.board_modify.new_attachment.length\n      if (filesMaxCount < filesCount) {\n        return this.$message({\n          type: 'info',\n          message: '첨부 파일 최대 개수는 3개 입니다.',\n          showClose: true,\n        })\n      }\n\n      this.board_modify.new_attachment = [\n        ...this.board_modify.new_attachment,\n        ...e.target.files,\n      ]\n    },\n    deleteFileList(index) {\n      this.board_modify.new_attachment.splice(index, 1)\n    },\n    deleteExistFileList(index) {\n      this.board_modify.exist_attachment.splice(index, 1)\n      this.remove_attachment_list.push(this.board_modify.exist_attachment[0])\n    },\n  },\n  mounted() {\n    this.fecthBoard()\n  },\n}\n</script>\n<style lang=\"scss\" scoped>\n.listWrap {\n  display: flex;\n}\n.attachmentWrap {\n  margin-bottom: 10px;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./board.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./board.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./board.vue?vue&type=template&id=365f8225&scoped=true&\"\nimport script from \"./board.vue?vue&type=script&lang=js&\"\nexport * from \"./board.vue?vue&type=script&lang=js&\"\nimport style0 from \"./board.vue?vue&type=style&index=0&id=365f8225&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"365f8225\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toObject = require('../internals/to-object');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar createProperty = require('../internals/create-property');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\n\nvar max = Math.max;\nvar min = Math.min;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;\nvar MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';\n\n// `Array.prototype.splice` method\n// https://tc39.es/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var actualStart = toAbsoluteIndex(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);\n    }\n    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {\n      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);\n    }\n    A = arraySpeciesCreate(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else delete O[to];\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    O.length = len - actualDeleteCount + insertCount;\n    return A;\n  }\n});\n"],"sourceRoot":""}